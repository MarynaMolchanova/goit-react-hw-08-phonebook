{"version":3,"file":"static/js/516.5c8514fa.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","pages/Contacts/Contacts.styled.js","components/Form/ContactForm/ContactForm.styled.js","components/Form/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/EditModal/RedactModal.styled.js","components/ContactList/EditModal/RedactModal.jsx","components/ContactList/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  padding: 15px;\n\n  @media screen and (min-width: 426px) {\n    padding: 32px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  font-size: 32px;\n  background: -webkit-linear-gradient(#0cf, #5a5a5a);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    margin-bottom: 25px;\n    font-size: 52px;\n  }\n`;\nexport const Caption = styled.h2`\n  margin-bottom: 15px;\n  font-size: 22px;\n  background: -webkit-linear-gradient(#438dff, #2f2f2f);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    margin-bottom: 25px;\n    font-size: 30px;\n  }\n`;\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\nimport { BsTelephonePlus } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 25px;\n  max-width: 250px;\n\n  @media screen and (min-width: 426px) {\n    max-width: 450px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  background: -webkit-linear-gradient(#438dff, #2f2f2f);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  @media screen and (min-width: 426px) {\n    font-size: 30px;\n  }\n`;\n\nexport const TextFieldStyled = styled(TextField)`\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: border 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    outline: rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  cursor: pointer;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    color: #ebf4f8;\n    background-color: #002359c4;\n  }\n`;\n\nexport const IconBtn = styled(BsTelephonePlus)`\n  margin-left: 10px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContacts } from 'redux/contacts/contacts-operations';\nimport { addContactsSuccess, addContactsWarning, serverError } from 'components/Toastify/Toastify';\n\nimport { Form, Title, TextFieldStyled, Button, IconBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n\n    const isIncludesName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (!isIncludesName) {\n      const result = await dispatch(addContacts({ name, number }));\n      if (result.error) {\n        serverError();\n      } else {\n        addContactsSuccess(name);\n        event.target.reset();\n      }\n    } else {\n      addContactsWarning(name);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title>Add your contacts</Title>\n      <TextFieldStyled id=\"name\" type=\"text\" label=\"Name\" autoFocus required fullWidth />\n      <TextFieldStyled id=\"number\" type=\"tel\" label=\"Number\" required fullWidth />\n\n      <Button type=\"submit\">\n        Add contact\n        <IconBtn />\n      </Button>\n    </Form>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  }\n);\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  color: #002359c4;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: border 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    outline: rgba(0, 0, 0, 0);\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { Div, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n  const handleFilterChange = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <Div>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={event => handleFilterChange(event.target.value)}\n      ></Input>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\nimport { Box, TextField } from '@mui/material';\nimport { BsFillPencilFill } from 'react-icons/bs';\nimport { SlClose } from 'react-icons/sl';\n\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 10px;\n  width: 100%;\n  background-color: #b1cad4;\n  box-shadow: 10px 10px 10px 0px rgb(108, 108, 108);\n  border-radius: 10px;\n  overflow: hidden;\n\n  @media screen and (min-width: 426px) {\n    width: 450px;\n    padding: 25px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: rgba(0, 35, 89, 0.77);\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: #b71111;\n  }\n`;\n\nexport const IconBtnClose = styled(SlClose)`\n  width: 35px;\n  height: 35px;\n`;\n\nexport const Title = styled.h2`\n  color: rgb(0 35 89 / 77%);\n`;\n\nexport const TextFieldStyled = styled(TextField)`\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    outline: rgba(0, 0, 0, 0);\n  }\n`;\n\nexport const ButtonSubmit = styled.button`\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n  font-weight: bold;\n  cursor: pointer;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #2196f3;\n    color: #ebf4f8;\n    background-color: #002359c4;\n  }\n`;\n\nexport const IconBtn = styled(BsFillPencilFill)`\n  margin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { redactContacts } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nimport {\n  redactContactsWarning,\n  redactContactsSuccess,\n  redactContactsError,\n  serverError,\n} from 'components/Toastify/Toastify';\n\nimport {\n  BoxStyled,\n  Form,\n  ButtonClose,\n  IconBtnClose,\n  Title,\n  TextFieldStyled,\n  ButtonSubmit,\n  IconBtn,\n} from './RedactModal.styled';\nimport { Modal } from '@mui/material';\n\nexport const RedactModal = ({ isOpenModal, handleCloseModal, id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const [redactName, setRedactName] = useState(name);\n  const [redactNumber, setRedactNumber] = useState(number);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const nameForm = event.target.elements.name.value;\n    const numberForm = event.target.elements.number.value;\n    const isIncludesName = contacts.some(\n      contact => contact.name.toLowerCase() === nameForm.toLowerCase()\n    );\n    if (name === nameForm && number === numberForm) {\n      redactContactsWarning();\n    } else if (isIncludesName) {\n      redactContactsError(nameForm);\n    } else {\n      const result = await dispatch(redactContacts({ id, name: nameForm, number: numberForm }));\n      if (result.error) {\n        serverError();\n      } else {\n        handleCloseModal();\n        redactContactsSuccess();\n      }\n    }\n  };\n\n  const handleInputChange = event => {\n    if (event.target.id === 'name') {\n      setRedactName(event.target.value);\n    } else if (event.target.id === 'number') {\n      setRedactNumber(event.target.value);\n    }\n  };\n\n  return (\n    <Modal\n      open={isOpenModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <BoxStyled>\n        <Form onSubmit={handleSubmit}>\n          <ButtonClose type=\"button\" onClick={handleCloseModal}>\n            <IconBtnClose />\n          </ButtonClose>\n          <Title>Redact your contact</Title>\n\n          <TextFieldStyled\n            id=\"name\"\n            type=\"text\"\n            label=\"Name\"\n            value={redactName}\n            onChange={handleInputChange}\n            autoFocus\n            fullWidth\n          />\n          <TextFieldStyled\n            id=\"number\"\n            type=\"tel\"\n            label=\"Number\"\n            value={redactNumber}\n            onChange={handleInputChange}\n            fullWidth\n          />\n\n          <ButtonSubmit type=\"submit\">\n            Redact\n            <IconBtn />\n          </ButtonSubmit>\n        </Form>\n      </BoxStyled>\n    </Modal>\n  );\n};\n\nRedactModal.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  handleCloseModal: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Items = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 3vw;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 1em;\n  }\n`;\n\nexport const Link = styled.a`\n  color: blue;\n  transition: color 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: green;\n  }\n`;\n\nexport const ButtonRedact = styled.button`\n  padding: 2px 4px;\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  background-color: #ebf4f8;\n  color: #002359c4;\n  margin-right: 5px;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #18b711;\n    border-radius: 5px;\n    color: #ebf4f8;\n    background-color: #18b711;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  padding: 2px 4px;\n  text-align: center;\n  cursor: pointer;\n  border: 1px solid #487996;\n  border-radius: 5px;\n  background-color: #ebf4f8;\n  color: #002359c4;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #ca0505;\n    color: #ebf4f8;\n    background-color: #b71111;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsTelephone } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { BsFillPencilFill } from 'react-icons/bs';\n\nimport { RedactModal } from '../EditModal/RedactModal';\nimport { deleteContacts } from 'redux/contacts/contacts-operations';\n\nimport { serverError, deleteContactsSuccess } from 'components/Toastify/Toastify';\n\nimport { Items, Link, ButtonRedact, ButtonDelete } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => setIsOpenModal(true);\n  const handleCloseModal = () => setIsOpenModal(false);\n  const handleDelete = async () => {\n    const result = await dispatch(deleteContacts(id));\n    if (result.error) {\n      serverError();\n    } else {\n      deleteContactsSuccess(name);\n    }\n  };\n\n  return (\n    <>\n      <Items>\n        <Link href=\"tel:{number}\">\n          <BsTelephone />\n        </Link>\n        <p>\n          {name}: {number}\n        </p>\n        <div>\n          <ButtonRedact type=\"button\" onClick={handleOpenModal}>\n            <BsFillPencilFill />\n          </ButtonRedact>\n          <ButtonDelete type=\"button\" onClick={handleDelete}>\n            Delete\n          </ButtonDelete>\n        </div>\n      </Items>\n      {isOpenModal && (\n        <RedactModal\n          isOpenModal={isOpenModal}\n          handleCloseModal={handleCloseModal}\n          id={id}\n          name={name}\n          number={number}\n        />\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 500px;\n  padding: 8px;\n\n  background-color: #ebf4f8;\n  box-shadow: 10px 10px 10px 0px rgb(108, 108, 108);\n  border-radius: 10px;\n  overflow: hidden;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/filter/filter-selectors';\n\nimport { ContactListItem } from './ContactListItem/ContactListItem';\n\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactListItem id={id} name={name} number={number} key={id} />\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/contacts/contacts-selectors';\n\nimport { Wrapper, Title, Caption } from './Contacts.styled';\n\nimport { ContactForm } from 'components/Form/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactsItems = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n\n      <ContactForm />\n\n      <Caption>Contacts</Caption>\n      {contactsItems.length > 0 && <Filter />}\n      {isLoading && !error && <Loader />}\n      {contactsItems.length > 0 && <ContactList />}\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Wrapper","styled","Title","Caption","Form","TextFieldStyled","TextField","Button","IconBtn","BsTelephonePlus","ContactForm","useSelector","dispatch","useDispatch","handleSubmit","event","preventDefault","name","target","elements","value","number","some","contact","toLowerCase","addContacts","serverError","addContactsSuccess","reset","addContactsWarning","onSubmit","id","type","label","autoFocus","required","fullWidth","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","trim","includes","Div","Label","Input","Filter","htmlFor","onChange","setFilter","handleFilterChange","BoxStyled","Box","ButtonClose","IconBtnClose","SlClose","ButtonSubmit","BsFillPencilFill","RedactModal","isOpenModal","handleCloseModal","useState","redactName","setRedactName","redactNumber","setRedactNumber","nameForm","numberForm","isIncludesName","redactContactsWarning","redactContactsError","redactContacts","redactContactsSuccess","handleInputChange","Modal","open","onClick","Items","Link","ButtonRedact","ButtonDelete","ContactListItem","setIsOpenModal","handleDelete","deleteContacts","deleteContactsSuccess","href","List","ContactList","visibleContacts","map","contactsItems","useEffect","fetchContacts","length","Loader"],"sourceRoot":""}